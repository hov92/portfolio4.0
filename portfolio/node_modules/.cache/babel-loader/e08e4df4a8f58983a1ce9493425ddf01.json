{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nvar EmitterInstance_1 = require(\"./EmitterInstance\");\n\nvar Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Emitters = /*#__PURE__*/function () {\n  function Emitters(container) {\n    var _this = this;\n\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    var overridableContainer = container;\n\n    overridableContainer.getEmitter = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    overridableContainer.addEmitter = function (options, position) {\n      return _this.addEmitter(options, position);\n    };\n\n    overridableContainer.playEmitter = function (idxOrName) {\n      var emitter = overridableContainer.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n\n    overridableContainer.pauseEmitter = function (idxOrName) {\n      var emitter = overridableContainer.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n\n  _createClass(Emitters, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.emitters) {\n        if (options.emitters instanceof Array) {\n          this.emitters = options.emitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(options.emitters);\n        }\n      }\n\n      var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = interactivityEmitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityEmitters instanceof Array) {\n            this.interactivityEmitters = new Emitter_1.Emitter();\n          }\n\n          this.interactivityEmitters.load(interactivityEmitters);\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.emitters),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var emitterOptions = _step.value;\n            this.addEmitter(emitterOptions);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.addEmitter(this.emitters);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var emitter = _step2.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var emitter = _step3.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var emitter = _step4.value;\n          emitter.update(delta);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var emitterOptions = this.emitters;\n      var modeEmitters = this.interactivityEmitters;\n\n      if (mode === Enums_1.EmitterClickMode.emitter) {\n        var emitterModeOptions;\n\n        if (modeEmitters instanceof Array) {\n          if (modeEmitters.length > 0) {\n            emitterModeOptions = Utils_1.itemFromArray(modeEmitters);\n          }\n        } else {\n          emitterModeOptions = modeEmitters;\n        }\n\n        var emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.itemFromArray(emitterOptions) : emitterOptions;\n        var ePosition = container.interactivity.mouse.clickPosition;\n        this.addEmitter(Utils_1.deepExtend({}, emittersOptions), ePosition);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator5 = _createForOfIteratorHelper(this.array),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var emitter = _step5.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function addEmitter(options, position) {\n      var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/tsparticles/Plugins/Emitters/Emitters.js"],"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Emitter_1","Enums_1","Utils_1","container","array","emitters","interactivityEmitters","overridableContainer","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","playEmitter","emitter","externalPlay","pauseEmitter","externalPause","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","play","pause","delta","update","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","EmitterInstance","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(Utils_1.deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, options, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"]},"metadata":{},"sourceType":"script"}