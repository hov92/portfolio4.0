{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nvar Enums_1 = require(\"../../../Enums\");\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\n\nvar Vector_1 = require(\"../../../Core/Particle/Vector\");\n\nvar Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Attractor, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events;\n\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return Utils_1.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n        this.hoverAttract();\n      } else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n        this.clickAttract();\n      }\n    }\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var container = this.container;\n      var attractOptions = container.actualOptions.interactivity.modes.attract;\n      var query = container.particles.quadTree.query(area);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          var _Utils_1$getDistances = Utils_1.getDistances(particle.position, position),\n              dx = _Utils_1$getDistances.dx,\n              dy = _Utils_1$getDistances.dy,\n              distance = _Utils_1$getDistances.distance;\n\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = Utils_1.clamp(Utils_1.calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector_1.Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }]);\n\n  return Attractor;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/tsparticles/Interactions/External/Attract/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Enums_1","require","Utils_1","ExternalInteractorBase_1","Vector_1","container","options","actualOptions","mouse","interactivity","events","position","onHover","enable","clickPosition","onClick","hoverMode","mode","clickMode","isInArray","HoverMode","attract","ClickMode","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","attractOptions","modes","query","particles","quadTree","particle","getDistances","dx","dy","distance","velocity","speed","factor","attractFactor","clamp","calcEasing","easing","maxSpeed","normVec","Vector","create","subFrom","finish","count","clicking","ExternalInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Enums_1 = require(\"../../../Enums\");\nconst Utils_1 = require(\"../../../Utils\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nconst Vector_1 = require(\"../../../Core/Particle/Vector\");\nclass Attractor extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return Utils_1.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = Utils_1.clamp(Utils_1.calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector_1.Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}