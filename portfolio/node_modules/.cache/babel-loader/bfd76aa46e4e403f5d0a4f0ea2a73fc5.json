{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShapeManager = void 0;\nvar shapes = new Map();\n\nvar ShapeManager = /*#__PURE__*/function () {\n  function ShapeManager() {\n    _classCallCheck(this, ShapeManager);\n  }\n\n  _createClass(ShapeManager, null, [{\n    key: \"addShape\",\n    value: function addShape(name, drawer) {\n      if (!ShapeManager.getShape(name)) {\n        shapes.set(name, drawer);\n      }\n    }\n  }, {\n    key: \"getShape\",\n    value: function getShape(name) {\n      return shapes.get(name);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return shapes.keys();\n    }\n  }]);\n\n  return ShapeManager;\n}();\n\nexports.ShapeManager = ShapeManager;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/tsparticles/Plugins/Emitters/ShapeManager.js"],"names":["Object","defineProperty","exports","value","ShapeManager","shapes","Map","name","drawer","getShape","set","get","keys"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;AACA,IAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;IACMF,Y;;;;;;;WACF,kBAAgBG,IAAhB,EAAsBC,MAAtB,EAA8B;AAC1B,UAAI,CAACJ,YAAY,CAACK,QAAb,CAAsBF,IAAtB,CAAL,EAAkC;AAC9BF,QAAAA,MAAM,CAACK,GAAP,CAAWH,IAAX,EAAiBC,MAAjB;AACH;AACJ;;;WACD,kBAAgBD,IAAhB,EAAsB;AAClB,aAAOF,MAAM,CAACM,GAAP,CAAWJ,IAAX,CAAP;AACH;;;WACD,8BAA4B;AACxB,aAAOF,MAAM,CAACO,IAAP,EAAP;AACH;;;;;;AAELV,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeManager = void 0;\nconst shapes = new Map();\nclass ShapeManager {\n    static addShape(name, drawer) {\n        if (!ShapeManager.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    static getShape(name) {\n        return shapes.get(name);\n    }\n    static getSupportedShapes() {\n        return shapes.keys();\n    }\n}\nexports.ShapeManager = ShapeManager;\n"]},"metadata":{},"sourceType":"script"}