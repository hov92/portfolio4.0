{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkInstance = void 0;\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar LinkInstance = /*#__PURE__*/function () {\n  function LinkInstance(container) {\n    _classCallCheck(this, LinkInstance);\n\n    this.container = container;\n  }\n\n  _createClass(LinkInstance, [{\n    key: \"particleCreated\",\n    value: function particleCreated(particle) {\n      var linkParticle = particle;\n      linkParticle.links = [];\n    }\n  }, {\n    key: \"particleDestroyed\",\n    value: function particleDestroyed(particle) {\n      var linkParticle = particle;\n      linkParticle.links = [];\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(context, particle) {\n      var _this = this;\n\n      var linkParticle = particle;\n      var container = this.container;\n      var particles = container.particles;\n      var pOptions = particle.options;\n\n      if (linkParticle.links.length > 0) {\n        context.save();\n        var p1Links = linkParticle.links.filter(function (l) {\n          var linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n          return linkFreq <= pOptions.links.frequency;\n        });\n\n        var _iterator = _createForOfIteratorHelper(p1Links),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var link = _step.value;\n            var p2 = link.destination;\n\n            if (pOptions.links.triangles.enable) {\n              var links = p1Links.map(function (l) {\n                return l.destination;\n              });\n              var vertices = p2.links.filter(function (t) {\n                var linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n              });\n\n              if (vertices.length) {\n                var _iterator2 = _createForOfIteratorHelper(vertices),\n                    _step2;\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var vertex = _step2.value;\n                    var p3 = vertex.destination;\n                    var triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n\n                    if (triangleFreq > pOptions.links.triangles.frequency) {\n                      continue;\n                    }\n\n                    _this.drawLinkTriangle(linkParticle, link, vertex);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n              }\n            }\n\n            if (link.opacity > 0 && container.retina.linksWidth > 0) {\n              _this.drawLinkLine(linkParticle, link);\n            }\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        context.restore();\n      }\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(p1, link1, link2) {\n      var _a;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link1.destination;\n      var p3 = link2.destination;\n      var triangleOptions = p1.options.links.triangles;\n      var opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n      if (opacityTriangle <= 0) {\n        return;\n      }\n\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      var pos3 = p3.getPosition();\n      container.canvas.draw(function (ctx) {\n        if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n          return;\n        }\n\n        var colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n\n        if (!colorTriangle) {\n          var linksOptions = p1.options.links;\n          var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n        }\n\n        if (!colorTriangle) {\n          return;\n        }\n\n        Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n      });\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(p1, link) {\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link.destination;\n      var opacity = link.opacity;\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      container.canvas.draw(function (ctx) {\n        var _a, _b;\n\n        var colorLine;\n        var twinkle = p1.options.twinkle.lines;\n\n        if (twinkle.enable) {\n          var twinkleFreq = twinkle.frequency;\n          var twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n          var twinkling = Math.random() < twinkleFreq;\n\n          if (twinkling && twinkleRgb !== undefined) {\n            colorLine = twinkleRgb;\n            opacity = twinkle.opacity;\n          }\n        }\n\n        if (!colorLine) {\n          var linksOptions = p1.options.links;\n          var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n        }\n\n        if (!colorLine) {\n          return;\n        }\n\n        var width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        var maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n      });\n    }\n  }]);\n\n  return LinkInstance;\n}();\n\nexports.LinkInstance = LinkInstance;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/tsparticles/Interactions/Particles/Links/LinkInstance.js"],"names":["Object","defineProperty","exports","value","LinkInstance","Utils_1","require","container","particle","linkParticle","links","context","particles","pOptions","options","length","save","p1Links","filter","l","linkFreq","getLinkFrequency","destination","frequency","link","p2","triangles","enable","map","vertices","t","indexOf","vertex","p3","triangleFreq","getTriangleFrequency","drawLinkTriangle","opacity","retina","linksWidth","drawLinkLine","restore","p1","link1","link2","_a","actualOptions","triangleOptions","opacityTriangle","pos1","getPosition","pos2","pos3","canvas","draw","ctx","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","undefined","linksColors","get","linksColor","getLinkColor","backgroundMask","composite","_b","colorLine","twinkle","lines","twinkleFreq","twinkleRgb","twinkling","Math","random","width","maxDistance","size","warp","shadow"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkInstance = void 0;\nconst Utils_1 = require(\"../../../Utils\");\nclass LinkInstance {\n    constructor(container) {\n        this.container = container;\n    }\n    particleCreated(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    particleDestroyed(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    drawParticle(context, particle) {\n        const linkParticle = particle;\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (linkParticle.links.length > 0) {\n            context.save();\n            const p1Links = linkParticle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(linkParticle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(linkParticle, link);\n                }\n            }\n            context.restore();\n        }\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        container.canvas.draw((ctx) => {\n            if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        container.canvas.draw((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n}\nexports.LinkInstance = LinkInstance;\n"]},"metadata":{},"sourceType":"script"}