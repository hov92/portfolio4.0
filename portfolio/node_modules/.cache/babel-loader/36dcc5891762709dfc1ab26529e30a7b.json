{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Vector_1 = require(\"../../Core/Particle/Vector\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n\n    var _a, _b, _c;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n    this.options = options;\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = Utils_1.getRangeValue(options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density * container.retina.reduceFactor;\n    var limit = options.size.limit;\n    this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n    var color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_a = Utils_1.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container;\n      var options = this.options;\n\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = Utils_1.getDistance(this.position, mouse.downPosition);\n\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n\n      var pos = particle.getPosition();\n\n      var _Utils_1$getDistances = Utils_1.getDistances(this.position, pos),\n          dx = _Utils_1$getDistances.dx,\n          dy = _Utils_1$getDistances.dy,\n          distance = _Utils_1$getDistances.distance;\n\n      var v = Vector_1.Vector.create(dx, dy);\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n\n          this.updateParticlePosition(particle, v);\n        }\n\n        if (this.limit === undefined || this.size < this.limit) {\n          this.size += sizeFactor;\n        }\n\n        this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = Utils_1.getStyleFromRgb(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var _a, _b;\n\n      var container = this.container;\n      var percentPosition = this.options.position;\n      return Vector_1.Vector.create(((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width, ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      var container = this.container;\n      var canvasSize = container.canvas.size;\n\n      if (particle.needsNewPosition) {\n        var pSize = particle.getRadius();\n        particle.position.x = (canvasSize.width - pSize * 2) * (1 + (Math.random() * 0.2 - 0.1)) + pSize;\n        particle.position.y = (canvasSize.height - pSize * 2) * (1 + (Math.random() * 0.2 - 0.1)) + pSize;\n        particle.needsNewPosition = false;\n      }\n\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n          particle.absorberOrbit.length = Utils_1.getDistance(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n        }\n\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n        }\n\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n        }\n\n        var orbitRadius = particle.absorberOrbit.length;\n        var orbitAngle = particle.absorberOrbit.angle;\n        var orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        var updateFunc = {\n          x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n          y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector_1.Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n\n  return AbsorberInstance;\n}();\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.00/portfolio/node_modules/tsparticles/Plugins/Absorbers/AbsorberInstance.js"],"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","Vector_1","Enums_1","absorbers","container","options","position","_a","_b","_c","initialPosition","Vector","create","x","y","undefined","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","color","colorToRgb","b","g","r","copy","calcPosition","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","getDistances","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","isPointInside","canvas","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","random","width","height","destroyed","canvasSize","pSize","orbits","angle","minSize","min","absorberOrbitDirection","velocity","RotateDirection","clockwise","counterClockwise","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","moveSpeed","addV","origin","addTo"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nconst Enums_1 = require(\"../../Enums\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        this.options = options;\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = Utils_1.getRangeValue(options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density * container.retina.reduceFactor;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio * container.retina.reduceFactor : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container;\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = Utils_1.getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.getDistances(this.position, pos);\n        const v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector_1.Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const pSize = particle.getRadius();\n            particle.position.x = (canvasSize.width - pSize * 2) * (1 + (Math.random() * 0.2 - 0.1)) + pSize;\n            particle.position.y = (canvasSize.height - pSize * 2) * (1 + (Math.random() * 0.2 - 0.1)) + pSize;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = Utils_1.getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? Enums_1.RotateDirection.clockwise : Enums_1.RotateDirection.counterClockwise;\n            }\n            const orbitRadius = particle.absorberOrbit.length;\n            const orbitAngle = particle.absorberOrbit.angle;\n            const orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            const updateFunc = {\n                x: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.cos : Math.sin,\n                y: orbitDirection === Enums_1.RotateDirection.clockwise ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) * container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"]},"metadata":{},"sourceType":"script"}