{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repulser = void 0;\n\nvar Enums_1 = require(\"../../../Enums\");\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar Vector_1 = require(\"../../../Core/Particle/Vector\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\n\nvar Repulser = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Repulser, _ExternalInteractorBa);\n\n  var _super = _createSuper(Repulser);\n\n  function Repulser(container) {\n    _classCallCheck(this, Repulser);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Repulser, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events,\n          divs = events.onDiv,\n          divRepulse = Utils_1.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n\n      if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return Utils_1.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent,\n          events = options.interactivity.events,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          clickEnabled = events.onClick.enable,\n          clickMode = events.onClick.mode,\n          divs = events.onDiv;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n        this.hoverRepulse();\n      } else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n        this.clickRepulse();\n      } else {\n        Utils_1.divModeExecute(Enums_1.DivMode.repulse, divs, function (selector, div) {\n          return _this.singleSelectorRepulse(selector, div);\n        });\n      }\n    }\n  }, {\n    key: \"singleSelectorRepulse\",\n    value: function singleSelectorRepulse(selector, div) {\n      var _this2 = this;\n\n      var container = this.container,\n          query = document.querySelectorAll(selector);\n\n      if (!query.length) {\n        return;\n      }\n\n      query.forEach(function (item) {\n        var elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            divs = container.actualOptions.interactivity.modes.repulse.divs,\n            divRepulse = Utils_1.divMode(divs, elem);\n\n        _this2.processRepulse(pos, repulseRadius, area, divRepulse);\n      });\n    }\n  }, {\n    key: \"hoverRepulse\",\n    value: function hoverRepulse() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var repulseRadius = container.retina.repulseModeDistance;\n      this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n  }, {\n    key: \"processRepulse\",\n    value: function processRepulse(position, repulseRadius, area, divRepulse) {\n      var _a;\n\n      var container = this.container,\n          query = container.particles.quadTree.query(area),\n          repulseOptions = container.actualOptions.interactivity.modes.repulse;\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          var _Utils_1$getDistances = Utils_1.getDistances(particle.position, position),\n              dx = _Utils_1$getDistances.dx,\n              dy = _Utils_1$getDistances.dy,\n              distance = _Utils_1$getDistances.distance,\n              velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n              repulseFactor = Utils_1.clamp(Utils_1.calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed),\n              normVec = Vector_1.Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n\n          particle.position.addTo(normVec);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"clickRepulse\",\n    value: function clickRepulse() {\n      var container = this.container;\n\n      if (!container.repulse.finish) {\n        if (!container.repulse.count) {\n          container.repulse.count = 0;\n        }\n\n        container.repulse.count++;\n\n        if (container.repulse.count === container.particles.count) {\n          container.repulse.finish = true;\n        }\n      }\n\n      if (container.repulse.clicking) {\n        var repulseDistance = container.retina.repulseModeDistance,\n            repulseRadius = Math.pow(repulseDistance / 6, 3),\n            mouseClickPos = container.interactivity.mouse.clickPosition;\n\n        if (mouseClickPos === undefined) {\n          return;\n        }\n\n        var range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n            query = container.particles.quadTree.query(range);\n\n        var _iterator2 = _createForOfIteratorHelper(query),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var particle = _step2.value;\n\n            var _Utils_1$getDistances2 = Utils_1.getDistances(mouseClickPos, particle.position),\n                dx = _Utils_1$getDistances2.dx,\n                dy = _Utils_1$getDistances2.dy,\n                distance = _Utils_1$getDistances2.distance,\n                d = Math.pow(distance, 2),\n                velocity = container.actualOptions.interactivity.modes.repulse.speed,\n                force = -repulseRadius * velocity / d;\n\n            if (d <= repulseRadius) {\n              container.repulse.particles.push(particle);\n              var vect = Vector_1.Vector.create(dx, dy);\n              vect.length = force;\n              particle.velocity.setTo(vect);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (container.repulse.clicking === false) {\n        var _iterator3 = _createForOfIteratorHelper(container.repulse.particles),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _particle = _step3.value;\n\n            _particle.velocity.setTo(_particle.initialVelocity);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        container.repulse.particles = [];\n      }\n    }\n  }]);\n\n  return Repulser;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Repulser = Repulser;","map":{"version":3,"sources":["/Users/dwaynehovington/Desktop/portfolio4.0/portfolio/node_modules/tsparticles/Interactions/External/Repulse/Repulser.js"],"names":["Object","defineProperty","exports","value","Repulser","Enums_1","require","Utils_1","Vector_1","ExternalInteractorBase_1","container","options","actualOptions","mouse","interactivity","events","divs","onDiv","divRepulse","isDivModeEnabled","DivMode","repulse","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","divModeExecute","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","modes","divMode","processRepulse","mousePos","repulseModeDistance","_a","particles","quadTree","repulseOptions","particle","getDistances","dx","dy","distance","velocity","speed","factor","repulseFactor","clamp","calcEasing","easing","maxSpeed","normVec","Vector","create","addTo","finish","count","clicking","repulseDistance","Math","pow","mouseClickPos","undefined","range","d","force","push","vect","setTo","initialVelocity","ExternalInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Enums_1 = require(\"../../../Enums\");\nconst Utils_1 = require(\"../../../Utils\");\nconst Vector_1 = require(\"../../../Core/Particle/Vector\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\nclass Repulser extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divRepulse = Utils_1.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return Utils_1.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse;\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.divModeExecute(Enums_1.DivMode.repulse, divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = Utils_1.divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = Utils_1.clamp(Utils_1.calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector_1.Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.getDistances(mouseClickPos, particle.position), d = Math.pow(distance, 2), velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector_1.Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n"]},"metadata":{},"sourceType":"script"}